#include <string>
#include <vector>
using namespace std;

class Solution {
public:
    bool isMatch(string s, string p) {
        int m = s.length(), n = p.length();
        // dp[i][j] = apakah s[i:] match dengan p[j:]
        vector<vector<bool>> dp(m + 1, vector<bool>(n + 1, false));
        dp[m][n] = true; // dua-duanya habis, match

        // backwards
        for (int i = m; i >= 0; --i) {
            for (int j = n - 1; j >= 0; --j) {
                bool first_match = (i < m &&
                   (s[i] == p[j] || p[j] == '.'));
                if (j + 1 < n && p[j + 1] == '*') {
                    // 0x atau >0x "element sebelum *"
                    dp[i][j] = dp[i][j + 2] || 
                               (first_match && dp[i + 1][j]);
                } else {
                    dp[i][j] = first_match && dp[i + 1][j + 1];
                }
            }
        }
        return dp[0][0];
    }
};